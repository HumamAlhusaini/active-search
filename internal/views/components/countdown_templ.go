// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
// data_display

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"time"
)

func Countdown(expires time.Time) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex items-center space-x-1\" x-cloak x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("countdownTimer(new Date(\"%s\"))", expires.Format("2006-01-02T15:04:05Z")))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/views/components/countdown.templ`, Line: 13, Col: 98}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" x-init=\"initCountdownTimer();\" hx-get=\"/\" hx-trigger=\"countdownExpired from:body\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = countDownItem("time().days", "days").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = countDownItem("time().hours", "hours").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = countDownItem("time().minutes", "min").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = countDownItem("time().seconds", "sec").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><script>\n\t\tfunction countdownTimer(expiry) {\n\t\t\treturn {\n\t\t\t\texpiry: expiry,\n\t\t\t\tremaining:null,\n\t\t\t\tinitCountdownTimer() {\n\t\t\t\t\tthis.setCountdownTimerRemaining()\n\t\t\t\t\tthis.intervalId = setInterval(() => {\n\t\t\t\t\t\tthis.setCountdownTimerRemaining();\n\t\t\t\t\t}, 1000);\n\t\t\t\t},\n\t\t\t\tsetCountdownTimerRemaining() {\n\t\t\t\t\tconst diff = this.expiry - new Date().getTime();\n\t\t\t\t\tthis.remaining =  parseInt(diff / 1000);\n\t\t\t\t\tlet now = this.time()\n\t\t\t\t\tif (now.days === \"00\" && now.hours === \"00\" && now.minutes === \"00\" && now.seconds === \"00\") {\n\t\t\t\t\t\tclearInterval(this.intervalId)\n\t\t\t\t\t\tlet body = document.querySelector(\"body\")\n\t\t\t\t\t\tbody.dispatchEvent(new Event(\"countdownExpired\"))\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcountdownTimerDays() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue:this.remaining / 86400,\n\t\t\t\t\t\tremaining:this.remaining % 86400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcountdownTimerHours() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue:this.countdownTimerDays().remaining / 3600,\n\t\t\t\t\t\tremaining:this.countdownTimerDays().remaining % 3600\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcountdownTimerMinutes() {\n\t\t\t\t\treturn {\n\t\t\t\t\tvalue:this.countdownTimerHours().remaining / 60,\n\t\t\t\t\tremaining:this.countdownTimerHours().remaining % 60\n\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcountdownTimerSeconds() {\n\t\t\t\t\treturn {\n\t\t\t\t\tvalue:this.countdownTimerMinutes().remaining,\n\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tformat(value) {\n\t\t\t\t\treturn (\"0\" + parseInt(value)).slice(-2)\n\t\t\t\t},\n\t\t\t\ttime() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdays:this.format(this.countdownTimerDays().value),\n\t\t\t\t\t\thours:this.format(this.countdownTimerHours().value),\n\t\t\t\t\t\tminutes:this.format(this.countdownTimerMinutes().value),\n\t\t\t\t\t\tseconds:this.format(this.countdownTimerSeconds().value),\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t</script><script src=\"/static/js/alpine.js\" defer></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func countDownItem(xText, label string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var templ_7745c5c3_Var4 = []any{
			"flex flex-col justify-center items-center",
			"w-16 h-20 rounded-box bg-base-content text-base-300",
		}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var4...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var4).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/views/components/countdown.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><p class=\"text-5xl font-mono\" x-text=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(xText)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/views/components/countdown.templ`, Line: 91, Col: 46}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></p><p>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(label)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/views/components/countdown.templ`, Line: 92, Col: 12}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
