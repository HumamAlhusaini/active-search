// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package scripts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func CodeCopyButtonScript() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script>\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function() {\n\t\t\tlet blocks = document.querySelectorAll(\"pre.chroma\");\n\t\t\tblocks.forEach((block) => {\n\t\t\t\tlet btn = block.querySelector(\"button[name=copy-btn]\");\n\t\t\t\tif (btn === null && navigator.clipboard) {\n\t\t\t\t\tlet button = document.createElement(\"button\");\n\n\t\t\t\t\tlet svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\t\t\t\tlet path = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\n\t\t\t\t\tsvg.setAttribute(\"class\", \"w-8 h-8\")\n\t\t\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 24 24\")\n\t\t\t\t\tsvg.setAttribute(\"fill\", \"none\")\n\t\t\t\t\tsvg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\")\n\t\t\t\t\tpath.setAttribute(\"class\", \"fill-slate-100\")\n\t\t\t\t\tpath.setAttribute(\"fill-rule\", \"evenodd\")\n\t\t\t\t\tpath.setAttribute(\"clip-rule\", \"evenodd\")\n\t\t\t\t\tpath.setAttribute(\"d\", \"M19.5 16.5L19.5 4.5L18.75 3.75H9L8.25 4.5L8.25 7.5L5.25 7.5L4.5 8.25V20.25L5.25 21H15L15.75 20.25V17.25H18.75L19.5 16.5ZM15.75 15.75L15.75 8.25L15 7.5L9.75 7.5V5.25L18 5.25V15.75H15.75ZM6 9L14.25 9L14.25 19.5L6 19.5L6 9Z\")\n\t\t\t\t\tsvg.appendChild(path)\n\t\t\t\t\tbutton.appendChild(svg)\n\t\t\t\t\tbutton.setAttribute(\"name\", \"copy-btn\")\n\t\t\t\t\tblock.appendChild(button);\n\n\t\t\t\t\tbutton.addEventListener(\"click\", async () => {\n\t\t\t\t\t\tawait copyCode(block, button);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tasync function copyCode(block, button) {\n\t\t\t\tlet code = block.querySelector(\"code\");\n\t\t\t\tlet text = code.innerText.split(\"\\n\\n\").join(\"\\n\");\n\n\t\t\t\tawait navigator.clipboard.writeText(text);\n\t\t\t\t// visual feedback that task is completed\n\t\t\t\tbutton.querySelector(\"path\").classList.remove(\"fill-slate-100\")\n\t\t\t\tbutton.querySelector(\"path\").classList.add(\"fill-emerald-300\")\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbutton.querySelector(\"path\").classList.remove(\"fill-slate-300\")\n\t\t\t\t\tbutton.querySelector(\"path\").classList.add(\"fill-slate-100\")\n\t\t\t\t}, 500);\n\t\t\t}\n\t\t})\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func HXCodeCopyButtonScript() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script>\n\t\tdocument.addEventListener(\"htmx:afterSettle\", function() {\n\t\t\tlet blocks = document.querySelectorAll(\"pre.chroma\");\n\t\t\tblocks.forEach((block) => {\n\t\t\t\tlet btn = block.querySelector(\"button[name=copy-btn]\");\n\t\t\t\tif (btn === null && navigator.clipboard) {\n\t\t\t\t\tlet button = document.createElement(\"button\");\n\n\t\t\t\t\tlet svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\t\t\t\tlet path = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\n\t\t\t\t\tsvg.setAttribute(\"class\", \"w-8 h-8\")\n\t\t\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 24 24\")\n\t\t\t\t\tsvg.setAttribute(\"fill\", \"none\")\n\t\t\t\t\tsvg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\")\n\t\t\t\t\tpath.setAttribute(\"class\", \"fill-slate-100\")\n\t\t\t\t\tpath.setAttribute(\"fill-rule\", \"evenodd\")\n\t\t\t\t\tpath.setAttribute(\"clip-rule\", \"evenodd\")\n\t\t\t\t\tpath.setAttribute(\"d\", \"M19.5 16.5L19.5 4.5L18.75 3.75H9L8.25 4.5L8.25 7.5L5.25 7.5L4.5 8.25V20.25L5.25 21H15L15.75 20.25V17.25H18.75L19.5 16.5ZM15.75 15.75L15.75 8.25L15 7.5L9.75 7.5V5.25L18 5.25V15.75H15.75ZM6 9L14.25 9L14.25 19.5L6 19.5L6 9Z\")\n\t\t\t\t\tsvg.appendChild(path)\n\t\t\t\t\tbutton.appendChild(svg)\n\t\t\t\t\tbutton.setAttribute(\"name\", \"copy-btn\")\n\t\t\t\t\tblock.appendChild(button);\n\n\t\t\t\t\tbutton.addEventListener(\"click\", async () => {\n\t\t\t\t\t\tawait copyCode(block, button);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tasync function copyCode(block, button) {\n\t\t\t\tlet code = block.querySelector(\"code\");\n\t\t\t\tlet text = code.innerText.split(\"\\n\\n\").join(\"\\n\");\n\n\t\t\t\tawait navigator.clipboard.writeText(text);\n\t\t\t\t// visual feedback that task is completed\n\t\t\t\tbutton.querySelector(\"path\").classList.toggle(\"fill-emerald-300\")\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbutton.querySelector(\"path\").classList.toggle(\"fill-emerald-300\")\n\t\t\t\t}, 700);\n\t\t\t}\n\t\t})\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
