// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package examples

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fmt"
import "github.com/HumamAlhusaini/active-search/internal/model"
import "github.com/HumamAlhusaini/active-search/internal/views/components"

// example
func PricingExample() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = components.Pricing(true, PriceDataExample(true)).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var ProductPrices = map[string]map[bool]int{
	"Starter": {
		true:  10,
		false: 12,
	},
	"Professional": {
		true:  20,
		false: 24,
	},
}

func PriceDataExample(yearly bool) []model.Price {
	return []model.Price{
		{
			Title:            "Free",
			Description:      "My free plan",
			Price:            "$ 0",
			Per:              "/ month",
			IncludedFeatures: []string{"Feature 1", "Feature 2", "Feature 3"},
			ExcludedFeatures: []string{"Feature 4", "Feature 5"},
			CallToAction: model.Button{
				Label: "Start now",
				Attrs: templ.Attributes{
					"class": "btn btn-outline btn-sm",
				},
			},
		},
		{
			Title:            "Starter",
			Description:      "My starter plan",
			Price:            fmt.Sprintf("$ %d", ProductPrices["Starter"][yearly]),
			Per:              "/ month",
			IncludedFeatures: []string{"Feature 1", "Feature 2", "Feature 3", "Feature 4"},
			ExcludedFeatures: []string{"Feature 4"},
			CallToAction: model.Button{
				Label: "Start free trial",
				Attrs: templ.Attributes{
					"class": "btn btn-primary btn-sm",
				},
			},
		},
		{
			Title:            "Professional",
			Description:      "My professional plan",
			Price:            fmt.Sprintf("$ %d", ProductPrices["Professional"][yearly]),
			Per:              "/ month",
			IncludedFeatures: []string{"Feature 1", "Feature 2", "Feature 3", "Feature 4", "Feature 5"},
			CallToAction: model.Button{
				Label: "Start free trial",
				Attrs: templ.Attributes{
					"class": "btn btn-primary btn-sm",
				},
			},
		},
	}
}

var _ = templruntime.GeneratedTemplate
